# RUN: llvm-mc --disassemble %s -triple=x86_64-apple-darwin9 -mcpu=knl | FileCheck %s
# RUN: llvm-mc --disassemble %s -triple=x86_64-apple-darwin9 -mcpu=skx | FileCheck --check-prefix=CHECK-SKX %s

# CHECK: vpbroadcastd    %xmm18, %zmm28 {%k7} {z}
0x62 0x22 0x7d 0xcf 0x58 0xe2

# CHECK: vbroadcastss    (%rsp), %zmm28
0x62 0x62 0x7d 0x48 0x18 0x24 0x24

# CHECK: vblendmpd       (%rsi), %zmm2, %zmm8 {%k7}
0x62 0x72 0xed 0x4f 0x65 0x06

# CHECK: vpermpd (%rsi,%r10,4), %zmm2, %zmm8
0x62 0x32 0xed 0x48 0x16 0x04 0x96

# CHECK: vpbroadcastmw2d %k2, %zmm8
0x62 0x72 0x7e 0x48 0x3a 0xc2

# CHECK-SKX: vpbroadcastmw2d %k2, %xmm8
0x62 0x72 0x7e 0x08 0x3a 0xc2

# CHECK-SKX: vpbroadcastmw2d %k2, %ymm8
0x62 0x72 0x7e 0x28 0x3a 0xc2

# CHECK: vpbroadcastq    (%r9,%rax), %zmm28
0x62 0x42 0xfd 0x48 0x59 0x24 0x01

# CHECK: vbroadcastss    %xmm0, %zmm1
0x62 0xf2 0x7d 0x48 0x18 0xc8

# CHECK: vextracti32x4   $4, %zmm0, (%r10)
0x62 0xd3 0x7d 0x48 0x39 0x02 0x04

# CHECK: vextracti32x4   $4, %zmm0, %xmm1
0x62 0xf3 0x7d 0x48 0x39 0xc1 0x04

# CHECK: vinserti32x4    $1, %xmm21, %zmm5, %zmm17
0x62 0xa3 0x55 0x48 0x38 0xcd 0x01

# CHECK: vmovaps %zmm21, %zmm5 {%k3}
0x62 0xb1 0x7c 0x4b 0x28 0xed

# CHECK: vgatherdps      (%rsi,%zmm0,4), %zmm1 {%k2}
0x62 0xf2 0x7d 0x4a 0x92 0x0c 0x86

# CHECK: vgatherdpd      (%rsi,%ymm0,4), %zmm1 {%k2}
0x62 0xf2 0xfd 0x4a 0x92 0x0c 0x86

# CHECK: vpslld $16, %zmm21, %zmm22
0x62 0xb1 0x4d 0x40 0x72 0xf5 0x10

# CHECK: vpord %zmm22, %zmm21, %zmm23
0x62 0xa1 0x55 0x40 0xeb 0xfe

#####################################################
#                MASK INSTRUCTIONS                  #
#####################################################

# CHECK: kshiftlw        $3, %k1, %k2
0xc4 0xe3 0xf9 0x32 0xd1 0x03

# CHECK: kmovw   (%rdi), %k1
0xc5 0xf8 0x90 0x0f

# CHECK: kmovw   %k1, %eax
0xc5 0xf8 0x93 0xc1

# CHECK: kandw   %k1, %k2, %k3
0xc5 0xec 0x41 0xd9

# CHECK: kmovw   %k5, %k1
0xc5 0xf8 0x90 0xcd

#####################################################
#             COMPRESSED DISPLACEMENT               #
#####################################################

# TupleType = FVM
# CHECK: vmovdqu32 %zmm0, -448(%rcx)
0x62 0xf1 0x7e 0x48 0x7f 0x41 0xf9

# TupleType = T1S, 64-bit eltsize
# CHECK: vaddsd 256(%rdx), %xmm0, %xmm16
0x62 0xe1 0xff 0x08 0x58 0x42 0x20

# TupleType = T1S, 32-bit eltsize
# CHECK: vaddss 256(%rdx), %xmm0, %xmm16
0x62 0xe1 0x7e 0x08 0x58 0x42 0x40

# TupleType = FV
# CHECK: vaddpd 256(%rdx), %zmm0, %zmm16
0x62 0xe1 0xfd 0x48 0x58 0x42 0x04

# TupleType = FV, broadcast, 64-bit eltsize
# CHECK: vaddpd 256(%rdx){1to8}, %zmm0, %zmm16
0x62 0xe1 0xfd 0x58 0x58 0x42 0x20

# TupleType = FV, broadcast, 32-bit eltsize
# CHECK: vaddps 256(%rdx){1to16}, %zmm0, %zmm16
0x62 0xe1 0x7c 0x58 0x58 0x42 0x40

# TupleType = T4
# CHECK: vbroadcasti32x4 256(%rdx), %zmm16
0x62 0xe2 0x7d 0x48 0x5a 0x42 0x10

# Cases where we can't use cdisp8
# CHECK: vaddss 255(%rdx), %xmm0, %xmm16
0x62 0xe1 0x7e 0x08 0x58 0x82 0xff 0x00 0x00 0x00

# CHECK: vaddss 1024(%rdx), %xmm0, %xmm16
0x62 0xe1 0x7e 0x08 0x58 0x82 0x00 0x04 0x00 0x00

# CHECK: vpcmpeqd %zmm10, %zmm25, %k5
0x62 0xd3 0x35 0x40 0x1f 0xea 0x0

# CHECK: vpcmpltd %zmm10, %zmm25, %k5
0x62 0xd3 0x35 0x40 0x1f 0xea 0x1

# CHECK: vpcmpled %zmm10, %zmm25, %k5
0x62 0xd3 0x35 0x40 0x1f 0xea 0x2

# CHECK: vpcmpd $3, %zmm10, %zmm25, %k5
0x62 0xd3 0x35 0x40 0x1f 0xea 0x3

# CHECK: vpcmpneqd %zmm10, %zmm25, %k5
0x62 0xd3 0x35 0x40 0x1f 0xea 0x4

# CHECK: vpcmpnltd %zmm10, %zmm25, %k5
0x62 0xd3 0x35 0x40 0x1f 0xea 0x5

# CHECK: vpcmpnled %zmm10, %zmm25, %k5
0x62 0xd3 0x35 0x40 0x1f 0xea 0x6

# CHECK: vpcmpd $7, %zmm10, %zmm25, %k5
0x62 0xd3 0x35 0x40 0x1f 0xea 0x7

# CHECK: vpcmpd $8, %zmm10, %zmm25, %k5
0x62 0xd3 0x35 0x40 0x1f 0xea 0x8
